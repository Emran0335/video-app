// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  username     String   @unique @db.VarChar(255)
  email        String   @unique @db.VarChar(255)
  password     String   @db.VarChar(255)
  fullName     String   @db.VarChar(255)
  avatar       String   @db.VarChar(255)
  refreshToken String?  @db.VarChar(255)
  coverImage   String?  @db.VarChar(255)
  description  String   @default("") @db.VarChar(255)
  watchHistory Video[]  @relation("UserWatchHistory") // Many-to-many relationship
  videos       Video[]  @relation("UserVideos") // One-to-many relationship (owned videos)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Video {
  id          Int      @id @default(autoincrement())
  videoFile   String   @db.VarChar(255) // Cloudinary URL
  thumbnail   String   @db.VarChar(255) // Cloudinary URL
  title       String   @db.VarChar(255)
  description String   @db.Text
  duration    Float
  views       Int      @default(0)
  isPublished Boolean  @default(true)
  ownerId     Int
  owner       User     @relation("UserVideos", fields: [ownerId], references: [id]) // Many-to-one relationship
  watchedBy   User[]   @relation("UserWatchHistory") // Many-to-many relationship
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
